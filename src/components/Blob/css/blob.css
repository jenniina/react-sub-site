svg.filter {
  height: 0;
  width: 0;
}

#drag-container0 .drag-wrap {
  -webkit-filter: url(#svgfilter);
  filter: url(#svgfilter);
  background-color: transparent;
  width: 100%;
}
#drag-container0 {
  position: relative;
}
#drag-container0 .drag-wrap-outer {
  --hue: 214;
  --saturation: 80;
  --lightness: 30;
  background-color: hsl(
    calc(var(--hue)),
    calc(var(--saturation) * 1%),
    calc(var(--lightness) * 1%)
  );
}

#drag-container0 .dragzone::after {
  content: '';
  position: absolute;
  background-color: inherit;
  top: -30px;
  right: -30px;
  bottom: -30px;
  left: -30px;

  border-radius: 50%;
  z-index: -1;
}

#drag-container0 .dragzone {
  -webkit-filter: blur(35px);
  filter: blur(35px);
  min-height: 82px;
  min-width: 82px;
  max-height: 300px;
  max-width: 300px;
  height: calc(var(--i) * 2.6vh);
  width: calc(var(--i) * 2.6vh);
}
#drag-container0 .colorblock {
  -webkit-box-shadow: -4px 4px 20px 0 hsla(0, 0%, 0%, 0.2),
    -2px 2px 10px -6px hsla(0, 0%, 0%, 0.8), -2px 2px 4px -4px hsla(0, 0%, 0%, 0.8);
  box-shadow: -4px 4px 20px 0 hsla(0, 0%, 0%, 0.2),
    -2px 2px 10px -6px hsla(0, 0%, 0%, 0.8), -2px 2px 4px -4px hsla(0, 0%, 0%, 0.8);
}
#drag-container0 .make-larger,
#drag-container0 .make-smaller,
#drag-container0 .make-more,
#drag-container0 .delete-blob {
  background-color: lightgray;
}
#drag-container0 .make-larger {
  -webkit-box-shadow: inset 0.1rem -0.1rem 0.4rem -0.2rem rgba(0, 0, 0, 0.4),
    inset 0.1rem -0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  box-shadow: inset 0.1rem -0.1rem 0.4rem -0.2rem rgba(0, 0, 0, 0.4),
    inset 0.1rem -0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
}
#drag-container0 .make-smaller {
  -webkit-box-shadow: inset 0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.4),
    inset 0.1rem 0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  box-shadow: inset 0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.4),
    inset 0.1rem 0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  z-index: 2;
}
#drag-container0 .make-more {
  -webkit-box-shadow: inset -0.1rem -0.1rem 0.4rem -0.2rem rgba(0, 0, 0, 0.4),
    inset -0.1rem -0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  box-shadow: inset -0.1rem -0.1rem 0.4rem -0.2rem rgba(0, 0, 0, 0.4),
    inset -0.1rem -0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
}
#drag-container0 .delete-blob {
  -webkit-box-shadow: inset -0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.4),
    inset -0.1rem 0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  box-shadow: inset -0.1rem 0.1rem 0.4rem rgba(0, 0, 0, 0.4),
    inset -0.1rem 0.1rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
  z-index: 2;
}
#drag-container0 .drag-slider-wrap {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: row nowrap;
  flex-flow: row wrap;
  padding: 1rem;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1rem 2%;
  margin-bottom: 1em;
}
#drag-container0 .drag-slider-wrap > label,
#drag-container0 .drag-slider-wrap > input {
  flex: 1 0 80%;
  text-align: center;
  align-self: center;
}

@media (min-width: 800px) {
  .portfolio.page #drag-container0 {
    width: calc(96vw - var(--scrollbar_width));
    max-width: calc(96vw - var(--scrollbar_width));
    /* margin-left: calc(50% - 50vw + var(--scrollbar_width) / 2 + 2vw); */
  }
  #drag-container0 .drag-slider-wrap {
    flex: 1 1 28%;
    text-align: center;
    align-self: flex-end;
  }
}
.drag-slider-wrap label {
  position: relative;
  max-width: max-content;
  padding: 0 0 0.5em;
}
.drag-slider-wrap label::after {
  content: '';
  position: absolute;
  bottom: -1em;
  right: 50%;
  transform: translateX(50%);
  border: 0.5em transparent solid;
  border-width: 0.6em 0.4em;
  border-top-color: currentColor;
}

.drag-slider {
  --size: 30px;
  z-index: 2;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: relative;
  height: calc(var(--size));
  background: lightgray;
  outline: none;
  opacity: 0.6;
  z-index: 1;
  -webkit-transition: 0.2s;
  -webkit-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  transition: opacity 0.2s;
  border: 0;
  border-radius: var(--size);
  padding: 0 calc(var(--size) / 3);
}
.light .drag-slider {
  background: gray;
}
.drag-slider:hover {
  opacity: 1;
}
#drag-container0 .drag-slider:focus {
  border-radius: var(--size);
  outline: dashed 2px currentColor;
  outline-offset: 0;
  -webkit-box-shadow: none;
  box-shadow: none;
}

.drag-slider::-webkit-slider-thumb {
  width: var(--size);
  height: var(--size);
  background: var(--color-primary-11);
  cursor: ew-resize;
  border-radius: calc(var(--size));
  -webkit-box-shadow: inset 0 calc(var(--size) / 16 * -1) calc(var(--size) / 2)
    calc(var(--size) / 6 * -1) black;
  box-shadow: inset 0 calc(var(--size) / 16 * -1) calc(var(--size) / 2)
    calc(var(--size) / 6 * -1) black;
}

.drag-slider::-moz-range-thumb {
  width: var(--size);
  height: var(--size);
  background: var(--color-primary-11);
  cursor: ew-resize;
}

.drag-slider::-webkit-slider-runnable-track {
  width: 100%;
  background-color: white;
  border-radius: calc(var(--size));
  -webkit-box-shadow: inset 0 calc(var(--size) / 16) calc(var(--size) / 2)
    calc(var(--size) / 6 * -1) black;
  box-shadow: inset 0 calc(var(--size) / 16) calc(var(--size) / 2)
    calc(var(--size) / 6 * -1) black;
}

.drag-container {
  --corner: 1rem;
  --corner2: calc(var(--corner) / 1.2);
  --tooltip-width: 13rem;
  --tooltip-offset: 1.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
}
#drag-container0,
#drag-container1 {
  width: calc(100vw - var(--scrollbar_width) - 4px);
  max-width: calc(100vw - var(--scrollbar_width) - 4px);
  /* margin-left: calc(50% - 50vw + var(--scrollbar_width) / 2); */
}

.drag-container .label-container {
  -ms-flex-item-align: center;
  align-self: center;
  line-height: 2;
  flex: 0 0 100%;
  margin: 0 auto;
  padding-left: 1.5em;
  text-align: left;
}
.button-container {
  flex: 0 1 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  margin-bottom: 0.5em;
}
.drag-container button {
  border-radius: var(--corner);
  margin: 0.3em 0 0.3em;
}
.drag-container button.reset-blobs:hover,
.drag-container button.reset-blobs:focus {
  border-color: red;
  outline: 1px dashed red;
  outline-offset: 3px;
}
@media (min-width: 500px) {
  .drag-container .label-container {
    flex: 5 1 30%;
  }
  .drag-container .label-container .selectedvalue {
    -ms-flex-item-align: end;
    align-self: flex-end;
  }
  .button-container {
    flex: 1 1 auto;
    flex-flow: row nowrap;
    margin-bottom: 0.5em;
  }
  .drag-container button {
    margin: 0 0.5em 0.3em 0.3em;
    padding: 0.6em 0.8em;
  }
} /*END media*/

.drag-container button {
  outline: transparent 2px solid;
  outline-offset: -2px;
  border-radius: var(--corner);
}
.drag-container button:hover,
.drag-container button:focus {
  outline: currentColor 2px solid;
  outline-offset: -2px;
}

.drag-wrap-outer {
  --tooltip-color: lightgray;
  position: relative;
  width: 100%;
  margin: 0;
  padding: 0;
  -webkit-box-shadow: 0 10px 30px 0 hsla(0, 0%, 0%, 0.3);
  box-shadow: 0 10px 30px 0 hsla(0, 0%, 0%, 0.3);
  overflow: hidden;
}
.dark-mode .drag-wrap-outer {
  -webkit-box-shadow: 0 10px 30px 0 hsla(0, 0%, 0%, 0.8);
  box-shadow: 0 10px 30px 0 hsla(0, 0%, 0%, 0.8);
}
.drag-wrap-outer,
.drag-wrap {
  border-radius: var(--corner);
}

.drag-container
  .wp-block-group__inner-container
  > :not(.alignfull):not(.alignwide):not(.alignwide-wrap) {
  width: 100%;
  min-width: 100%;
}

.drag-wrap {
  height: 80vh;
  min-height: 400px;
  width: 100%;
  min-width: 100%;
  overflow: hidden;
  background-color: white;
  overflow: hidden;
  margin: 0;
  padding: 0;
}
#drag-container1 .drag-wrap {
  -webkit-filter: contrast(50);
  filter: contrast(50);
}
.drag-wrap ul {
  list-style: none;
  overflow: hidden;
}

.drag-container .dragzone {
  height: calc(var(--i) * 1.6vh);
  width: calc(var(--i) * 1.6vh);
  min-height: 40px;
  min-width: 40px;
  max-height: 220px;
  max-width: 220px;
  border-radius: 50% 51% 54% 46% / 43% 45% 55% 50%;
}
.drag-container .dragzone {
  position: absolute;
  padding: 0;
  margin: 0;
  cursor: -webkit-grab;
  cursor: grab;
  -webkit-animation: sway 3s ease-in-out infinite;
  animation: sway 3s ease-in-out infinite;
  -webkit-animation-delay: calc(var(--i) * 0.25s);
  animation-delay: calc(var(--i) * 0.25s);
  animation-play-state: running;
  border: 0;
  background-color: black;
}
.drag-container .paused .dragzone {
  animation-play-state: paused;
}
.drag-container .dragzone:active {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}
#drag-container1 .dragzone {
  -webkit-filter: blur(16px);
  filter: blur(16px);
}
.dragzone.drag {
  outline: white solid 10px;
  outline-offset: -9px;
}
.dragzone span {
  color: white;
}

#drag-container1 .dragzone:hover,
#drag-container1 .dragzone.drag,
#drag-container1 .dragzone:focus,
body.dark-mode .site #drag-container1 .dragzone:focus {
  outline: purple 5px solid;
  outline-offset: -2px;
}

#drag-container1 .dragzone.color-lime:hover,
#drag-container1 .dragzone.color-lime:focus,
#drag-container1 .dragzone.drag.color-lime:focus {
  outline: blue 3px solid;
  outline-offset: -2px;
}
.dragzone:hover {
  -webkit-box-shadow: none;
  box-shadow: none;
}

.make-larger,
.make-smaller {
  position: absolute;
  text-align: center;
  font-weight: bold;
  outline-offset: 1px;
  color: black;
  background-color: white;
}

.make-larger:hover::after,
.make-smaller:hover::after,
.drag-container button.toggle-marker:hover::after,
.drag-container button.toggle-marker:focus::after {
  position: absolute;
  font-size: 0.8rem;
  font-weight: normal;
  text-align: left;
  width: var(--tooltip-width);
  line-height: 1;
  background-color: var(--tooltip-color);
  padding: 0.2em 0.4em 0.4em;
  border-radius: 5px;
  border-bottom: gray 1px solid;
  -webkit-box-shadow: -0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
  box-shadow: -0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
}
.drag-container button.toggle-marker:hover::after,
.drag-container button.toggle-marker:focus::after {
  color: black;
  background-color: white;
}
.drag-container button.toggle-marker {
  position: relative;
}
.drag-container button.toggle-marker:hover::after,
.drag-container button.toggle-marker:focus::after {
  content: 'Toggle marker visibility when using a keyboard';
  top: 0.5em;
  right: calc(100% + 2em);
  background-color: white;
  color: black;
}
.drag-container button.toggle-marker:hover::before,
.drag-container button.toggle-marker:focus::before {
  content: '';
  position: absolute;
  top: 35%;
  -webkit-transform: translateY(-30%) rotate(-20deg);
  -ms-transform: translateY(-30%) rotate(-20deg);
  transform: translateY(-30%) rotate(-20deg);
  left: calc(-1 * var(--tooltip-offset) * 1.5);
  border: 1em solid transparent;
  border-width: 0.43em 1.3em;
  border-width: calc(var(--tooltip-offset) / 3) calc(var(--tooltip-offset) * 1.5);
  border-left-color: white;
}
.make-larger {
  font-size: 1.1rem;
  line-height: 1.5;
  padding-left: 0.05em;
  width: 1.5em;
  height: 1.5em;
  top: 0.2rem;
  border-radius: var(--corner2);
  -webkit-box-shadow: -0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.4);
  box-shadow: -0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.4);
}
.make-larger:hover::after {
  content: 'Enlarge a blob by dragging it over me! Keyboard use: press 2 with blob in focus';
  top: 0.5em;
  right: calc(100% + 2em);
}
.make-larger:hover::before {
  content: '';
  position: absolute;
  top: 70%;
  -webkit-transform: translateY(-30%) rotate(-20deg);
  -ms-transform: translateY(-30%) rotate(-20deg);
  transform: translateY(-30%) rotate(-20deg);
  left: calc(-1 * var(--tooltip-offset) * 1.5);
  border: 1em solid transparent;
  border-width: 0.43em 1.3em;
  border-width: calc(var(--tooltip-offset) / 3) calc(var(--tooltip-offset) * 1.5);
  border-left-color: var(--tooltip-color);
}
.make-smaller {
  --bottom: -2.2rem;
  font-size: 0.9rem;
  padding-left: 0.1em;
  width: 1.8em;
  top: 0;
  line-height: 1.9;
  border-radius: var(--corner2);
  -webkit-box-shadow: -0.2rem -0.2rem 0.5rem rgba(0, 0, 0, 0.4);
  box-shadow: -0.2rem -0.2rem 0.5rem rgba(0, 0, 0, 0.4);
}
.make-smaller:hover::after {
  content: 'Make a blob smaller by releasing it near me! Keyboard use: press 1 with blob in focus';
  top: -1.5rem;
  right: calc(100% + 2em);
}
.make-smaller:hover::before {
  content: '';
  position: absolute;
  top: 20%;
  -webkit-transform: translateY(-80%) rotate(20deg);
  -ms-transform: translateY(-80%) rotate(20deg);
  transform: translateY(-80%) rotate(20deg);
  left: calc(-1 * var(--tooltip-offset) * 1.5);
  border: 1em solid transparent;
  border-width: calc(var(--tooltip-offset) / 3) calc(var(--tooltip-offset) * 1.5);
  border-left-color: var(--tooltip-color);
}
.make-more,
.delete-blob {
  position: absolute;
  height: 1.6rem;
  width: 1.6rem;
  max-width: 2.5rem;
}
.colorblock.color-orange,
.colorblock.color-red,
.colorblock.color-purple,
.colorblock.color-blue {
  border-radius: 5rem 6.7rem 6.7rem 5rem / 0.7rem 8.7rem 8.7rem 0.7rem;
}
.make-more,
.delete-blob {
  color: black;
  background-color: white;
}
.make-more:hover::after,
.delete-blob:hover::after {
  position: absolute;
  font-size: 0.8rem;
  font-weight: normal;
  text-align: left;
  width: var(--tooltip-width);
  line-height: 1;
  background-color: var(--tooltip-color);
  padding: 0.2em 0.4em 0.4em;
  border-radius: 5px;
  border-bottom: gray 1px solid;
  -webkit-box-shadow: 0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
  box-shadow: 0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
}
.make-more {
  top: 0.2rem;
  left: 17%;
  font-size: 1.3rem;
  height: 1.7rem;
  line-height: 1.2;
  padding-left: 0.4rem;
  border-radius: var(--corner);
  -webkit-box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.4);
  box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.4);
}
.make-more:hover::after {
  content: 'Release a blob here to duplicate it!  Keyboard use: press 3 with blob in focus';
  top: 0.5em;
  left: calc(100% + 2em);
}
.make-more:hover::before {
  content: '';
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-30%) rotate(20deg);
  -ms-transform: translateY(-30%) rotate(20deg);
  transform: translateY(-30%) rotate(20deg);
  left: calc(-1 * var(--tooltip-offset) / 3);
  border: 1em solid transparent;
  border-width: 0.43em 1.3em;
  border-width: calc(var(--tooltip-offset) / 3) calc(var(--tooltip-offset) * 1.5);
  border-right-color: var(--tooltip-color);
}
.delete-blob {
  height: 1.7rem;
  top: calc(100% - 2rem);
  left: 17%;
  font-size: 1.4rem;
  line-height: 1.15;
  padding-left: 0.4rem;
  border-radius: var(--corner);
  outline: dashed 0.1rem red;
  outline-offset: 0.1rem;
  -webkit-box-shadow: 0.2rem -0.2rem 0.5rem rgba(0, 0, 0, 0.4);
  box-shadow: 0.2rem -0.2rem 0.5rem rgba(0, 0, 0, 0.4);
}
.delete-blob:hover {
  outline-offset: 0.2rem;
  outline-width: 0.2rem;
}
.delete-blob:hover::after {
  content: 'Remove a blob by bringing it to me! Keyboard use: press Delete with blob in focus';
  bottom: 0.5em;
  left: calc(100% + 2em);
}
.delete-blob:hover::before {
  content: '';
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-80%) rotate(-20deg);
  -ms-transform: translateY(-80%) rotate(-20deg);
  transform: translateY(-80%) rotate(-20deg);
  left: calc(-1 * var(--tooltip-offset) / 3);
  border: 1rem solid transparent;
  border-width: calc(var(--tooltip-offset) / 3) calc(var(--tooltip-offset) * 1.5);
  border-right-color: var(--tooltip-color);
}
.colorblock {
  --width-middle: 1.5rem;
  --width-widest: 1.8rem;
  position: absolute;
  width: 1.2rem;
  height: 2rem;
  border-radius: 2.7rem 4rem 4rem 2.7rem / 3.7rem 0.7rem 0.7rem 3.7rem;
}
@media (max-width: 600px) {
  .colorblock {
    --width-middle: 1rem;
    --width-widest: 1.2rem;
    position: absolute;
    width: 0.8rem;
  }
} /*END media*/
.colorblock:hover::after {
  content: 'Release a blob near me to change color! Keyboard use: press Enter with blob in focus';
  position: absolute;
  top: -0.5em;
  left: calc(var(--tooltip-width) * -1 - var(--tooltip-offset));
  top: 50%;
  -webkit-transform: translatey(-50%);
  -ms-transform: translatey(-50%);
  transform: translatey(-50%);
  width: var(--tooltip-width);
  line-height: 1;
  font-size: 0.8rem;
  color: black;
  background-color: var(--tooltip-color);
  padding: 0.3em 0.4em 0.4em;
  border-radius: 5px;
  -webkit-box-shadow: -0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
  box-shadow: -0.3em 0.5em 1em -0.5em rgba(0, 0, 0, 0.4);
  border-bottom: gray 1px solid;
}
.colorblock:hover::before {
  content: '';
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  left: calc(-1 * var(--tooltip-offset) * 1.2);
  border: 1rem solid transparent;
  border-width: calc(var(--tooltip-offset) / 3) var(--tooltip-offset);
  border-left-color: var(--tooltip-color);
}
.colorblock.color-yellowlime,
.colorblock.color-pinkyellow,
.colorblock.color-black {
  border-radius: 6.7rem 5rem 5rem 6.7rem / 8.7rem 0.7rem 0.7rem 8.7rem;
}
.colorblock.color-yellowlime {
  background: -o-linear-gradient(45deg, lemonchiffon, greenyellow);
  background: linear-gradient(45deg, lemonchiffon, greenyellow);
  width: var(--width-middle);
}
.colorblock.color-cyanyellow {
  background: -o-linear-gradient(45deg, cyan, greenyellow);
  background: linear-gradient(45deg, cyan, greenyellow);
  width: var(--width-widest);
}
.colorblock.color-cyanpink {
  background: -o-linear-gradient(45deg, cyan, lightsalmon);
  background: linear-gradient(45deg, cyan, lightsalmon);
  width: var(--width-middle);
}
.colorblock.color-pinkyellow {
  background: -o-linear-gradient(45deg, lemonchiffon, pink);
  background: linear-gradient(45deg, lemonchiffon, pink);
}

.colorblock.color-black {
  background-color: black;
}
.colorblock.color-lime {
  background-color: lime;
  width: var(--width-middle);
}

.colorblock.color-blue {
  background: linear-gradient(45deg, deepskyblue, dodgerblue);
}
.colorblock.color-purple {
  background: linear-gradient(45deg, magenta, violet);
  width: var(--width-middle);
}
.colorblock.color-red {
  background: linear-gradient(45deg, red, tomato);
}
.colorblock.color-orange {
  background: linear-gradient(45deg, darkorange, orange);
}
.exitblob {
  flex-basis: 100%;
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}
@-webkit-keyframes sway {
  0%,
  100% {
    -webkit-transform: translatey(0px);
    transform: translatey(0px);
  }
  50% {
    -webkit-transform: translatey(6px);
    transform: translatey(6px);
  }
}
@keyframes sway {
  0%,
  100% {
    -webkit-transform: translatey(0px);
    transform: translatey(0px);
  }
  50% {
    -webkit-transform: translatey(6px);
    transform: translatey(6px);
  }
}
