#game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  margin-top: 0;
  margin-left: calc(calc(var(--page-padding) + var(--padd)) * -1);
  min-width: calc(100% + calc(calc(var(--page-padding) + var(--padd))) * 2);
}
#game-container section.sectioncard {
  margin-left: calc(var(--page-padding) / 2 * -1);
  min-width: calc(100% + var(--page-padding));
}
#game-container section.sectioncard,
#game-container section.sectioncard > div {
  width: 100%;
  padding: 0;
}
#game-container section.sectioncard > div {
  padding: 2rem 0;
}
#game-container section.sectioncard > div > div {
  width: 100%;
  padding: 0;
}
#game-container section.game,
#game-container section.game > div {
  width: 100%;
}
#game-container section.game > div > div {
  width: max-content;
  margin: 0 auto;
}
.container,
.modal {
  --border-radius: 5px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.settings {
  margin-top: 3rem;
}
#game-container .settings h3 {
  margin-top: 0.5em;
}
.settings > div {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 0 2em;
}
#game-container .settings .player-names-wrap {
  flex: 1 0 100%;
  max-width: 20rem;
}
@media (min-width: 700px) {
  .settings > div > div {
    flex: 1 0 calc(50% - 2em);
    max-width: 13rem;
  }
}
@media (min-width: 1000px) {
  .settings > div > div,
  #game-container .settings .player-names-wrap {
    flex: 1 0 calc(33% - 2em);
    max-width: 13rem;
  }
}
.grid-wrap {
  position: relative;
}

.grid-wrap.size8::before,
.grid-wrap.size10::before,
.grid-wrap.size8::after,
.grid-wrap.size10::after {
  content: '';
  position: absolute;
  width: calc(50% + 0.4rem);
  height: calc(50% + 0.4rem);
  background-color: var(--color-primary-4);
  z-index: -1;
}
.grid-wrap.size8::before,
.grid-wrap.size10::before {
  top: calc(-0.4rem + 0.5px);
  left: calc(-0.4rem + 0.5px);
  border-bottom: 1px solid var(--color-primary-14);
  border-right: 1px solid var(--color-primary-14);
  background: linear-gradient(-45deg, var(--color-primary-6) 0%, transparent 50%);
}
.grid-wrap.size8::after,
.grid-wrap.size10::after {
  top: 50%;
  left: 50%;
  border-left: 1px solid var(--color-primary-14);
  border-top: 1px solid var(--color-primary-14);
  background: linear-gradient(-45deg, transparent 50%, var(--color-primary-6) 100%);
}
.light .grid-wrap.size8::before,
.light .grid-wrap.size10::before {
  background: linear-gradient(-45deg, var(--color-primary-7) 0%, transparent 50%);
}
.light .grid-wrap.size8::after,
.light .grid-wrap.size10::after {
  background: linear-gradient(-45deg, transparent 50%, var(--color-primary-7) 100%);
}

.grid {
  display: grid;
  gap: clamp(1px, calc(var(--multiplier)), 10px);
  max-width: calc(95vw - var(--scrollbar_width));
  overflow-y: auto;
  overflow-x: auto;
  margin-top: 20px;
}
@media (min-width: 500px) {
  .grid {
    overflow: visible;
  }
}

.card {
  min-width: 40px;
  min-height: 40px;
  width: clamp(
    40px,
    calc(
      var(--size) / var(--amount) * var(--multiplier) -
        calc(var(--scrollbar_width) / calc(var(--amount) - 1)) - var(--multiplier)
    ),
    calc(80vh / var(--amount))
  );
  height: clamp(
    40px,
    calc(
      var(--size) / var(--amount) * var(--multiplier) -
        calc(var(--scrollbar_width) / calc(var(--amount) - 1)) - var(--multiplier)
    ),
    calc(80vh / var(--amount))
  );
  max-width: calc(calc(var(--size) * var(--multiplier)) / var(--amount));
  max-height: calc(calc(var(--size) * var(--multiplier)) / var(--amount));
  perspective: 1000px;
  cursor: pointer;
}
.card * {
  font-size: clamp(12px, var(--fontSize), var(--title-XXXL));
  white-space: nowrap;
  letter-spacing: -0.1em;
}

.flipped .front {
  /* transform: rotateY(0deg); */
  animation: flip 0.4s forwards;
  animation-play-state: running;
}

.flipped .back {
  /* transform: rotateY(180deg); */
  animation: flip-back 0.4s forwards;
  animation-play-state: running;
}

.flipped-over .front {
  animation: flip-back 0.4s forwards;
}
.flipped-over .back {
  animation: flip 0.4s forwards;
}
.flipped-over.flipped .front {
  animation: flip 0.4s forwards;
}
.flipped-over.flipped .back {
  animation: flip-back 0.4s forwards;
}

@keyframes flip {
  0% {
    transform: translateX(0) rotateY(180deg);
    transform-origin: 100% 50%;
  }
  50% {
    transform: translateX(-3rem) rotateY(90deg);
    transform-origin: 50% 50%;
  }
  100% {
    transform: translateX(0) rotateY(0deg);
    transform-origin: 0% 50%;
  }
}
@keyframes flip-back {
  0% {
    transform: translateX(0) rotateY(0deg);
    transform-origin: 100% 50%;
  }
  50% {
    transform: translateX(-3rem) rotateY(90deg);
    transform-origin: 50% 50%;
  }
  100% {
    transform: translateX(0) rotateY(180deg);
    transform-origin: 0% 50%;
  }
}

.front,
.back {
  width: 100%;
  height: 100%;
  position: absolute;
  backface-visibility: hidden;
  border: 2px solid var(--color-primary-16);
  border-top-width: 3px;
  border-bottom-width: 1px;
  outline: 1px solid var(--color-primary-1);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: clamp(3px, calc(1.5 * var(--multiplier)), 10px);
  transition-property: transform;
  transition-duration: 0.6s;
}
.light .front,
.light .back {
  border-color: var(--color-primary-13);
  border-top-width: 1px;
  border-bottom-width: 4px;
}
.front {
  background-color: var(--color-primary-2);
  color: var(--color-secondary-6);
  transform: rotateY(180deg);
  z-index: 2;
}
.front span {
  transform: translateX(-0.08rem);
}
.light .front {
  background-color: var(--color-primary-1);
  color: var(--color-primary-14);
}
.back {
  background-color: var(--color-primary-11);
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><text x="10" y="20" font-size="28" text-anchor="middle" fill="%23338BFF">+</text></svg>');
  background-repeat: repeat;
  background-size: 10px 10px;
}
.light .back {
  background-color: var(--color-primary-11);
}

.card {
  position: relative;
}

.header {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin-bottom: 0.3em;
  font-size: 0.9em;
}

.game-over {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}
.high-scores {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 1.5em;
  min-width: 100%;
}
.high-scores ol {
  padding: 0 0 0 1em;
  min-width: 100%;
}

.high-scores ol li {
  position: relative;
  margin: 0.4em 0;
  padding: 0.1em 0.1em 0.2em;
  z-index: 1;
}
.high-scores ol li:not(:last-child)::after {
  content: '';
  position: absolute;
  top: -0.2em;
  left: -1.3em;
  display: block;
  width: calc(100% + 1.2em);
  height: calc(100% + 0.4em);
  background-color: transparent;
  border-bottom: 1px dashed gray;
  z-index: -1;
}
.high-scores ol li > div {
  display: inline-flex;
  flex-flow: row wrap;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  gap: 0.5em;
}
.high-scores {
  gap: 1em;
}

.modal h3 {
  margin-top: 0.5em;
}
.high-scores > div {
  border: 2px solid var(--color-primary-10);
  border-radius: calc(var(--border-radius) * 1.5);
  border-bottom-width: 4px;
  border-top-width: 1px;
  width: 100&;
  min-width: clamp(150px, 100%, 18rem);
  max-width: 18rem;
  align-self: stretch;
}
.high-scores > div:has(.new-score) {
  outline: 6px solid var(--color-secondary-4);
}
.light .high-scores > div:has(.new-score) {
  outline: 6px solid var(--color-secondary-17);
}

.high-scores > div > div {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: center;
  align-self: stretch;
  gap: 0;
  flex-grow: 1;
  margin: 0 auto;
  min-width: 100%;
}

.high-scores h3,
.high-scores h4 {
  margin-top: 0;
  margin-bottom: 0.3em;
  flex-grow: 0;
  font-size: clamp(var(--title-XS), 2vw, var(--title-S));
  text-align: center;
  background: var(--color-primary-5);
  width: 100%;
  padding: 1em 0.8em 0.5em;
  border-radius: calc(var(--border-radius) * 1.5) calc(var(--border-radius) * 1.5) 0 0;
  line-height: 1.3;
}
.high-scores h3 {
  position: relative;
  margin-top: 0.5em;
  padding: 0.4em 0 0.3em;
  font-size: clamp(var(--title-S), 3vw, var(--title-M));
  background: linear-gradient(
    90deg,
    transparent 5%,
    var(--color-primary-6) 35%,
    var(--color-primary-6) 65%,
    transparent 95%
  );
}
.high-scores h3::before,
.high-scores h3::after {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  height: 0.5em;
  background: linear-gradient(
    90deg,
    transparent 10%,
    var(--color-primary-5) 45%,
    var(--color-primary-5) 55%,
    transparent 90%
  );
}
.high-scores h4 {
  background: linear-gradient(
    0deg,
    var(--color-primary-6) 0%,
    var(--color-primary-5) 30%,
    var(--color-primary-4) 100%
  );
}
.high-scores h3::before {
  top: -0.5em;
}
.high-scores h3::after {
  bottom: -0.6em;
  height: 0.6em;
}
.high-scores h4 .title-svg svg {
  font-size: 2.6em;
  margin: -0.35em -0.15em;
}
.high-scores h4 .title-icon svg {
  font-size: 1.4em;
  margin: -0.2em 0;
}
.high-scores ol {
  flex-grow: 1;
  margin: 0;
  font-size: 0.8rem;
  padding: 0.1em 0.8em 0.8em 2.2em;
}
.high-scores .new-score {
  position: relative;
  font-weight: bold;
  color: var(--color-secondary-4);
  padding: 0.2em 0.1em 0.4em 0;
  z-index: 2;
}
.high-scores .new-score span {
  font-size: 1.1em;
}
.light .high-scores .new-score {
  color: var(--color-primary-12);
}
.high-scores .new-score::before {
  content: '';
  position: absolute;
  top: -0.2em;
  left: -2em;
  width: calc(100% + 2.5em);
  height: calc(100% + 0.1em);
  border-radius: var(--border-radius);
  background-color: var(--color-primary-3);
  color: var(--color-secondary-4);
  z-index: -1;
}
.high-scores .time-wrap {
  margin-left: auto;
}
.high-scores .time {
  display: inline-block;
  background-color: var(--color-primary-4);
  border-radius: var(--border-radius);
  padding: 0.1em 0.5em 0.2em;
  border: 2px solid var(--color-primary-7);
  border-bottom-width: 0px;
  border-top-width: 0px;
  margin-left: auto;
  margin-right: 0.5em;
}
.light .high-scores .time {
  background-color: var(--color-primary-5);
}
.high-scores ol li::marker {
  font-weight: bold;
  letter-spacing: 0.1em;
}
#game-container .high-scores .delete-btn {
  padding: 0.2em 0.3em 0;
  margin-left: auto;
}
.delete-name-form {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: flex-start;
  gap: 0.6em;
}
.delete-name-form > div {
  margin-top: 3em;
}
@media (min-width: 700px) {
  .high-scores > div {
    width: calc(50% - 0.5em);
    min-width: clamp(150px, calc(50% - 0.5em), 18rem);
  }
}
@media (min-width: 1000px) {
  #game-container .high-scores {
    margin-left: calc(var(--page-padding) / 2 * -1);
    min-width: calc(100% + var(--page-padding));
  }
  .high-scores > div {
    width: calc(33% - 1em);
    min-width: clamp(150px, calc(33% - 1em), 18rem);
    max-width: 18rem;
  }
}
.select {
  margin: 0 0 1em 0;
}
.select > span {
  margin-left: 0.5em;
}
.player-names {
  margin-top: 1em;
}
.player-names > div {
  margin-top: 3em;
}
.set-card-type {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  gap: 1em;
  margin-bottom: 2em;
}
.set-card-type button,
.set-players button,
.set-grid button {
  font-weight: bold;
  outline: 6px double var(--color-primary-6);
  border: 3.5px solid var(--color-primary-6);
}
.set-card-type button::before,
.set-players button::before,
.set-grid button::before {
  content: '';
  position: absolute;
  top: -0.4rem;
  left: -0.4rem;
  width: calc(100% + 0.8rem);
  height: calc(100% + 0.8rem);
  border-radius: 50%;
  background: var(--color-primary-4);
  border: 2px solid var(--color-primary-3);
  z-index: -1;
}
.set-card-type button,
.set-card-type button svg {
  font-size: clamp(var(--title-XXL), 23vw, var(--title-XXXL));
}
.set-card-type button {
  border-radius: 50%;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.3em;
  height: 1.3em;
  border: 4px solid var(--color-primary-6);
}
.set-grid {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  gap: 1em;
  margin-bottom: 2em;
}
.set-grid button {
  border-radius: 50%;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 4em;
  height: 4em;
}
.container .set-grid button.active,
.container .set-players button.active {
  outline: 5px double var(--color-primary-20);
  outline-offset: -1px;
  border: 3px solid var(--color-primary-20);
}
.set-players,
.set-handedness {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  gap: 1em;
  margin-bottom: 1em;
}
.container > * {
  margin-bottom: 3em;
}
.container h3 {
  margin: 2em auto 1em;
  font-size: clamp(var(--title-M), 6vw, var(--title-L));
}

.set-players button,
.set-handedness button {
  border-radius: 50%;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 3em;
  height: 3em;
}
.container button.active {
  outline: 8px double var(--color-primary-20);
  outline-offset: -1px;
}
button.active::before {
  content: '';
  position: absolute;
  top: -0.5rem;
  left: -0.5rem;
  width: calc(100% + 1rem);
  height: calc(100% + 1rem);
  border-radius: 50%;
  background: hsl(var(--hue-primary), var(--sat-fade), 30%);
  border: 3px solid hsl(var(--hue-primary), var(--sat-fade), 15%);
  z-index: -1;
}
.set-card-type button.active::before {
  top: -0.2em;
  left: -0.2em;
  width: calc(100% + 0.4em);
  height: calc(100% + 0.4em);
}
.light button.active::before {
  background: hsl(var(--hue-primary), var(--sat-fade), 65%);
  border-color: hsl(var(--hue-primary), var(--sat-fade), 75%);
}
.set-card-type button.active {
  border-color: var(--color-primary-20);
}
#game-container button.active:hover,
#game-container button.active:focus {
  background-position: 50% 3%;
  color: var(--color-primary-20);
  cursor: default;
}
#game-container button.active:disabled {
  pointer-events: auto;
}
button.finish {
  margin: 4em auto 1em;
}
#game-container .edit-wrap {
  display: inline-block;
  max-width: max-content;
}
#game-container .edit-wrap > button {
  padding: 0.1em 0 0 0;
  margin: 0 0 -0.1em 0;
}
#game-container .edit-wrap > div {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: flex-start;
  gap: 2em;
}
#game-container .edit-wrap.close,
#game-container .edit-wrap.close > button {
  max-width: 1.4em;
  max-height: 1.3em;
  padding: 0.1em 0.05em 0 0.05em;
  margin: 0 0.4em -0.1em 0;
}
button.big {
  --radius: 2em;
  font-size: 1.5em;
  padding: 0.8em 1.5em;
  border-radius: var(--radius);
  flex: 0 0 auto;
  margin: 3rem auto;
  outline: 6px double var(--color-primary-10);
  outline-offset: -6px;
}
button.big:hover,
button.big:focus {
  outline: 6px double var(--color-primary-20);
  outline-offset: 0;
  /* transform: scale(1.05);*/ /*Destroyed background-position*/
}

button.big::before {
  content: '';
  position: absolute;
  top: -0.3rem;
  left: -0.3rem;
  width: calc(100% + 0.6rem);
  height: calc(100% + 0.6rem);
  border-radius: var(--radius);
  background: var(--color-primary-6);
  border: 0.15rem solid var(--color-primary-5);
  z-index: -1;
  transition-property: transform;
  transition-duration: 0.4s;
  transition-timing-function: ease-in-out, border-radius;
}
button.big:hover::before,
button.big:focus::before {
  transform: scale(1.06, 1.14);
  border-radius: calc(var(--radius) + 1rem);
}
